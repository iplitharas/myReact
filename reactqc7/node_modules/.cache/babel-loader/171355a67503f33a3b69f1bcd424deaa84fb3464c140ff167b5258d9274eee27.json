{"ast":null,"code":"var _jsxFileName = \"/Users/iplitharas/projects/myReact/reactqc7/src/App.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoubleClickCounter() {\n  _s();\n  // DoubleClickCounter demo\n  // With this implementation we always re-render the component\n  // if it's not `doubleClicked`\n  const [counter, setCounter] = useState(0);\n  // improve the above line with `useRef`\n  // const [lastClickedTime, setLastClickedTime] = useState(null);\n  const lastClickedTime = useRef(null);\n  const onClickIncrease = () => {\n    const isDoubleClicked = Date.now() - lastClickedTime.current < 300;\n    if (isDoubleClicked) {\n      setCounter(value => value + 1);\n    } else {\n      // setLastClickedTime(Date.now())\n      lastClickedTime.current = Date.now();\n    }\n  };\n  const onClickReset = () => {\n    setCounter(value => 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Counter: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickIncrease,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_s(DoubleClickCounter, \"3XCyfp/hQQZvP6YQqUOZbbILfoU=\");\n_c = DoubleClickCounter;\nfunction ToDOItems(_ref) {\n  let {\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ToDOItems;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Chapter 7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DoubleClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DoubleClickCounter\");\n$RefreshReg$(_c2, \"ToDOItems\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useRef","useState","DoubleClickCounter","counter","setCounter","lastClickedTime","onClickIncrease","isDoubleClicked","Date","now","current","value","onClickReset","ToDOItems","items","App"],"sources":["/Users/iplitharas/projects/myReact/reactqc7/src/App.js"],"sourcesContent":["import {useRef, useState} from \"react\";\n\nfunction DoubleClickCounter(){\n  // DoubleClickCounter demo\n  // With this implementation we always re-render the component\n  // if it's not `doubleClicked`\n  const [counter, setCounter] = useState(0);\n  // improve the above line with `useRef`\n  // const [lastClickedTime, setLastClickedTime] = useState(null);\nconst lastClickedTime = useRef(null)\n  const onClickIncrease = () => {\n    const isDoubleClicked = Date.now() - lastClickedTime.current < 300;\n    if (isDoubleClicked){\n       setCounter((value) => value +1 )\n    } else{\n      // setLastClickedTime(Date.now())\n      lastClickedTime.current = Date.now()\n    }\n  }\n  const onClickReset = () => {\n    setCounter((value)=> 0)\n  }\n\n  return (\n      <div>\n        <p>Counter: {counter}</p>\n          <button onClick={onClickIncrease}>Increment</button>\n          <button onClick={onClickReset}>Reset</button>\n      </div>\n  )\n}\n\nfunction ToDOItems({items}){\n  return (\n      <>\n        <h2>Todo Items</h2>\n        <ul>\n          \n        </ul>\n      </>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <h1> Chapter 7</h1>\n      <DoubleClickCounter/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAEvC,SAASC,kBAAkB,GAAE;EAAA;EAC3B;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACzC;EACA;EACF,MAAMI,eAAe,GAAGL,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMM,eAAe,GAAG,MAAM;IAC5B,MAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAGJ,eAAe,CAACK,OAAO,GAAG,GAAG;IAClE,IAAIH,eAAe,EAAC;MACjBH,UAAU,CAAEO,KAAK,IAAKA,KAAK,GAAE,CAAC,CAAE;IACnC,CAAC,MAAK;MACJ;MACAN,eAAe,CAACK,OAAO,GAAGF,IAAI,CAACC,GAAG,EAAE;IACtC;EACF,CAAC;EACD,MAAMG,YAAY,GAAG,MAAM;IACzBR,UAAU,CAAEO,KAAK,IAAI,CAAC,CAAC;EACzB,CAAC;EAED,oBACI;IAAA,wBACE;MAAA,WAAG,WAAS,EAACR,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAQ,OAAO,EAAEG,eAAgB;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACpD;MAAQ,OAAO,EAAEM,YAAa;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEZ;AAAC,GA5BQV,kBAAkB;AAAA,KAAlBA,kBAAkB;AA8B3B,SAASW,SAAS,OAAS;EAAA,IAAR;IAACC;EAAK,CAAC;EACxB,oBACI;IAAA,wBACE;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAA;MAAA;MAAA;IAAA,QAEK;EAAA,gBACJ;AAET;AAAC,MATQD,SAAS;AAYlB,SAASE,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACpB;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB,QAAC,kBAAkB;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEV;AAAC,MAPQA,GAAG;AASZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}