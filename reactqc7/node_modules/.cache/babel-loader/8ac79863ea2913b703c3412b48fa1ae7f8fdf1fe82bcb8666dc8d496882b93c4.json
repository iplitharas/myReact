{"ast":null,"code":"var _jsxFileName = \"/Users/iplitharas/projects/myReact/reactqc7/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { memo, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoubleClickCounter() {\n  _s();\n  // DoubleClickCounter demo\n  // With this implementation we always re-render the component\n  // if it's not `doubleClicked`\n  const [counter, setCounter] = useState(0);\n  // improve the above line with `useRef`\n  // const [lastClickedTime, setLastClickedTime] = useState(null);\n  const lastClickedTime = useRef(null);\n  const onClickIncrease = () => {\n    const isDoubleClicked = Date.now() - lastClickedTime.current < 300;\n    if (isDoubleClicked) {\n      setCounter(value => value + 1);\n    } else {\n      // setLastClickedTime(Date.now())\n      lastClickedTime.current = Date.now();\n    }\n  };\n  const onClickReset = () => {\n    setCounter(value => 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Counter: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickIncrease,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_s(DoubleClickCounter, \"3XCyfp/hQQZvP6YQqUOZbbILfoU=\");\n_c = DoubleClickCounter;\nconst ToDOItems = /*#__PURE__*/memo(_c2 = function ToDOItems(_ref) {\n  let {\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [items.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", todo]\n      }, todo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n});\n_c3 = ToDOItems;\nfunction Todo() {\n  _s2();\n  // because we have the onChange it will force\n  // the rendering of the component in each type..\n  const [items, setItems] = useState([\"Learn React\", \"Learn Javascript\"]);\n  const [newItem, SetNewItem] = useState(\"\");\n  const onChange = evt => SetNewItem(evt.target.value);\n  const onSubmit = evt => {\n    setItems(items => items.concat([newItem]));\n    SetNewItem(\"\");\n    evt.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToDOItems, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newItem,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 8\n  }, this);\n}\n_s2(Todo, \"iGggqdz622vPXnKGW3tfwiAIobg=\");\n_c4 = Todo;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Chapter 7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DoubleClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DoubleClickCounter\");\n$RefreshReg$(_c2, \"ToDOItems$memo\");\n$RefreshReg$(_c3, \"ToDOItems\");\n$RefreshReg$(_c4, \"Todo\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["memo","useRef","useState","DoubleClickCounter","counter","setCounter","lastClickedTime","onClickIncrease","isDoubleClicked","Date","now","current","value","onClickReset","ToDOItems","items","map","todo","Todo","setItems","newItem","SetNewItem","onChange","evt","target","onSubmit","concat","preventDefault","App"],"sources":["/Users/iplitharas/projects/myReact/reactqc7/src/App.js"],"sourcesContent":["import {memo, useRef, useState} from \"react\";\n\nfunction DoubleClickCounter(){\n  // DoubleClickCounter demo\n  // With this implementation we always re-render the component\n  // if it's not `doubleClicked`\n  const [counter, setCounter] = useState(0);\n  // improve the above line with `useRef`\n  // const [lastClickedTime, setLastClickedTime] = useState(null);\nconst lastClickedTime = useRef(null)\n  const onClickIncrease = () => {\n    const isDoubleClicked = Date.now() - lastClickedTime.current < 300;\n    if (isDoubleClicked){\n       setCounter((value) => value +1 )\n    } else{\n      // setLastClickedTime(Date.now())\n      lastClickedTime.current = Date.now()\n    }\n  }\n  const onClickReset = () => {\n    setCounter((value)=> 0)\n  }\n\n  return (\n      <div>\n        <p>Counter: {counter}</p>\n          <button onClick={onClickIncrease}>Increment</button>\n          <button onClick={onClickReset}>Reset</button>\n      </div>\n  )\n}\n\nconst  ToDOItems = memo(function ToDOItems({items}){\n  return (\n      <>\n        <h2>Todo Items</h2>\n        <ul>\n            {items.map(todo => <li key={todo}> {todo}</li>)}\n            <button></button>\n        </ul>\n      </>\n  )\n});\n\nfunction Todo() {\n    // because we have the onChange it will force\n    // the rendering of the component in each type..\n    const [items, setItems] = useState([\"Learn React\", \"Learn Javascript\"])\n    const [newItem, SetNewItem] = useState(\"\")\n    const onChange = (evt) => SetNewItem(evt.target.value);\n    const onSubmit = (evt) => {\n        setItems(items => items.concat([newItem]));\n        SetNewItem(\"\")\n        evt.preventDefault()\n    }\n   return (\n       <div>\n             <ToDOItems items={items}/>\n           <form onSubmit={onSubmit}>\n               <input value={newItem} onChange={onChange}/>\n               <button>Add</button>\n           </form>\n       </div>\n   )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <h1> Chapter 7</h1>\n      <DoubleClickCounter/>\n        <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}